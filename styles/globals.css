/* 
sm, md, lg 이런 접두사를 보다 보면 반응형을 구현할 때,
'모바일의 경우는 sm을 쓰면 되는구나~~' 라고 생각할 수도 있는데 
테일윈드 CSS에서는 추천하지 않는 방식이다.

공식문서에 따르면 Tailwind는 기본적으로 부트스트랩과 같이 모바일 우선 중단점 시스템을 사용하기 때문에
모바일용으로 CSS를 적용하려면 sm:w-16과 같이 sm을 붙이는 것이 아닌, 
아무 접두사도 붙이지 않는 w-16으로 사용해야 한다는 것이다.

테일윈드 CSS를 사용해 반응형 디자인을 구현할 거라면
"모바일"에 먼저 맞게 디자인을 적용하고 
만약 태블릿이나 데스크톱 등 다양한 환경을 위해서는 md: 또는 lg:를 붙여서 
기기에 맞게 스타일링하면 된다는 것이다.
*/

@tailwind base;
@tailwind components;
@tailwind utilities;

/*  
md: (탭)
lg: (데스크탑) 
*/

.bg-primary { 
    @apply bg-white 
           dark:bg-slate-900
           text-black
           dark:text-white 
           w-full 
           h-full 
           min-h-[calc(100vh-5rem)] 
           max-w-full 
           pb-20}
 
 .page-title {
    @apply sm:text-4xl 
           text-3xl
           my-10 
           font-medium 
           text-green-900
 }
 
header {
  @apply sticky 
         top-0 
         left-0 
         right-0 
         w-full 
         z-50 
         bg-white 
         text-gray-600 
         dark:bg-slate-900 
         dark:text-white 
         relative
}           

footer {
    @apply h-20 
        w-full
        relative 
        bottom-0 /* footer는 부모요소의 맨 바닥에 딱 붙어있다. */ 
        mt-10
        flex 
        flex-col 
        items-center
        justify-center
        text-gray-200 
        bg-gray-300/50 
        dark:bg-gray-900/50 
}

h1, h2, h3, h4, h5, h6 {
    @apply text-green-600 
           dark:text-green-300
}

pre {
    @apply text-slate-900 
           dark:text-white 
           whitespace-pre-wrap 
}

html {
    @apply h-screen;
}

a {
    @apply text-slate-100
}

p {
    @apply text-slate-600 
           dark:text-slate-400
}

.Layout {
  @apply bg-primary 
         flex 
         flex-col 
         min-h-screen 
         justify-center 
         overflow-x-hidden;

  @apply w-full md:w-full lg:w-2/3 lg:mx-auto;

  @apply md:flex-row;
}